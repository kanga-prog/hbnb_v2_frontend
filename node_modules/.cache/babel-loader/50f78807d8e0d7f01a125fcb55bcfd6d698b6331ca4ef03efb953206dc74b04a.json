{"ast":null,"code":"// src/contexts/UserContext.js\nimport{createContext,useState,useEffect}from\"react\";import API from\"../services/api\";// ✅ utilise axios avec JWT\nimport{getCurrentUser}from\"../utils/auth\";// ⚡ décodage token\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const UserContext=/*#__PURE__*/createContext();export const UserProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const decodedUser=getCurrentUser();if(!decodedUser){setLoading(false);return;}// ✅ Requête API sécurisée via instance axios centralisée\nAPI.get(\"/users/me\").then(res=>{console.log(\"👤 Utilisateur récupéré :\",res.data);setUser(res.data);}).catch(err=>{console.error(\"❌ Erreur récupération user :\",err);setUser(decodedUser);// fallback minimal\n}).finally(()=>setLoading(false));},[]);const logout=()=>{localStorage.removeItem(\"token\");setUser(null);};return/*#__PURE__*/_jsx(UserContext.Provider,{value:{user,setUser,logout,loading},children:children});};","map":{"version":3,"names":["createContext","useState","useEffect","API","getCurrentUser","jsx","_jsx","UserContext","UserProvider","_ref","children","user","setUser","loading","setLoading","decodedUser","get","then","res","console","log","data","catch","err","error","finally","logout","localStorage","removeItem","Provider","value"],"sources":["/home/kanga_prog_unix/hbnb_v2_frontend/src/contexts/UserContext.js"],"sourcesContent":["// src/contexts/UserContext.js\nimport { createContext, useState, useEffect } from \"react\";\nimport API from \"../services/api\"; // ✅ utilise axios avec JWT\nimport { getCurrentUser } from \"../utils/auth\"; // ⚡ décodage token\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const decodedUser = getCurrentUser();\n    if (!decodedUser) {\n      setLoading(false);\n      return;\n    }\n\n    // ✅ Requête API sécurisée via instance axios centralisée\n    API.get(\"/users/me\")\n      .then(res => {\n        console.log(\"👤 Utilisateur récupéré :\", res.data);\n        setUser(res.data);\n      })\n      .catch(err => {\n        console.error(\"❌ Erreur récupération user :\", err);\n        setUser(decodedUser); // fallback minimal\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  };\n\n  return (\n    <UserContext.Provider value={{ user, setUser, logout, loading }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":"AAAA;AACA,OAASA,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CAAE;AACnC,OAASC,cAAc,KAAQ,eAAe,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,MAAO,MAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,WAAW,CAAGX,cAAc,CAAC,CAAC,CACpC,GAAI,CAACW,WAAW,CAAE,CAChBD,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA;AACAX,GAAG,CAACa,GAAG,CAAC,WAAW,CAAC,CACjBC,IAAI,CAACC,GAAG,EAAI,CACXC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEF,GAAG,CAACG,IAAI,CAAC,CAClDT,OAAO,CAACM,GAAG,CAACG,IAAI,CAAC,CACnB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,EAAI,CACZJ,OAAO,CAACK,KAAK,CAAC,8BAA8B,CAAED,GAAG,CAAC,CAClDX,OAAO,CAACG,WAAW,CAAC,CAAE;AACxB,CAAC,CAAC,CACDU,OAAO,CAAC,IAAMX,UAAU,CAAC,KAAK,CAAC,CAAC,CACrC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAY,MAAM,CAAGA,CAAA,GAAM,CACnBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAChChB,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAEnB,IAAI,CAAEC,OAAO,CAAEc,MAAM,CAAEb,OAAQ,CAAE,CAAAH,QAAA,CAC7DA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}