{"ast":null,"code":"var _jsxFileName = \"/home/kanga_prog_unix/hbnb_v2/frontend/src/pages/EditPlace.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport API from \"../services/api\";\nimport PlaceForm from \"../components/place/PlaceForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditPlace() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [place, setPlace] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    API.get(`/places/${id}/`).then(res => setPlace(res.data)).catch(err => {\n      console.error(err);\n      alert(\"Impossible de charger le lieu.\");\n    }).finally(() => setLoading(false));\n  }, [id]);\n  const handleUpdate = async data => {\n    try {\n      // On prépare juste le JSON, pas FormData\n      const payload = {\n        name: data.name,\n        description: data.description,\n        price_by_night: Number(data.price_by_night),\n        location: data.location,\n        country: data.country,\n        town: data.town,\n        latitude: data.latitude ? Number(data.latitude) : null,\n        longitude: data.longitude ? Number(data.longitude) : null,\n        amenities: data.amenities || []\n      };\n      await API.put(`/places/${id}/`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        } // ✅ JSON\n      });\n      alert(\"Lieu mis à jour !\");\n      navigate(`/places/${id}`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Erreur lors de la mise à jour\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (!place) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Lieu introuvable.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(PlaceForm, {\n    onSubmit: handleUpdate,\n    initialData: place\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n_s(EditPlace, \"SkxWHHP90eT/JfAfkn7eKzmpEcc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPlace;\nvar _c;\n$RefreshReg$(_c, \"EditPlace\");","map":{"version":3,"names":["useEffect","useState","useParams","useNavigate","API","PlaceForm","jsxDEV","_jsxDEV","EditPlace","_s","id","navigate","place","setPlace","loading","setLoading","get","then","res","data","catch","err","console","error","alert","finally","handleUpdate","payload","name","description","price_by_night","Number","location","country","town","latitude","longitude","amenities","put","headers","_err$response","_err$response$data","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","initialData","_c","$RefreshReg$"],"sources":["/home/kanga_prog_unix/hbnb_v2/frontend/src/pages/EditPlace.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport API from \"../services/api\";\nimport PlaceForm from \"../components/place/PlaceForm\";\n\nexport default function EditPlace() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [place, setPlace] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    API.get(`/places/${id}/`)\n      .then((res) => setPlace(res.data))\n      .catch((err) => {\n        console.error(err);\n        alert(\"Impossible de charger le lieu.\");\n      })\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  const handleUpdate = async (data) => {\n    try {\n      // On prépare juste le JSON, pas FormData\n      const payload = {\n        name: data.name,\n        description: data.description,\n        price_by_night: Number(data.price_by_night),\n        location: data.location,\n        country: data.country,\n        town: data.town,\n        latitude: data.latitude ? Number(data.latitude) : null,\n        longitude: data.longitude ? Number(data.longitude) : null,\n        amenities: data.amenities || [],\n      };\n\n      await API.put(`/places/${id}/`, payload, {\n        headers: { \"Content-Type\": \"application/json\" }, // ✅ JSON\n      });\n\n      alert(\"Lieu mis à jour !\");\n      navigate(`/places/${id}`);\n    } catch (err) {\n      console.error(err);\n      alert(err.response?.data?.message || \"Erreur lors de la mise à jour\");\n    }\n  };\n\n  if (loading) return <p>Chargement...</p>;\n  if (!place) return <p>Lieu introuvable.</p>;\n\n  return <PlaceForm onSubmit={handleUpdate} initialData={place} />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}